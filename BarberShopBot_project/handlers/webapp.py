import json
import logging
from telegram import Update
from telegram.ext import MessageHandler, ContextTypes, filters
from BarberShopBot_project.db import save_profile

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–≤–æ–π –ª–æ–≥–≥–µ—Ä
logger = logging.getLogger(__name__)

async def webapp_data_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # –í—Å–µ–≥–¥–∞ –ª–æ–≥–∏—Ä—É–µ–º –∑–∞—Ö–æ–¥ –≤ —Ö—ç–Ω–¥–ª–µ—Ä
    logger.info("üîî webapp_data_handler –≤—ã–∑–≤–∞–Ω")

    webapp = update.message.web_app_data
    if not webapp:
        logger.info("‚úñ –ù–µ—Ç web_app_data –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏")
        return

    logger.info("‚Ñπ –ü–æ–ª—É—á–µ–Ω—ã WebApp –¥–∞–Ω–Ω—ã–µ: %s", webapp.data)

    # –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å JSON
    try:
        obj = json.loads(webapp.data)
    except json.JSONDecodeError:
        logger.error("‚ùå –û—à–∏–±–∫–∞ —Ä–∞–∑–±–æ—Ä–∞ JSON: %s", webapp.data)
        return

    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º payload
    t = obj.get("type")
    if t == "profile_update":
        payload = obj.get("payload", {})
        logger.info("‚úÖ profile_update, —Å–æ—Ö—Ä–∞–Ω—è–µ–º: %s", payload)
        save_profile(
            telegram_id=update.effective_user.id,
            first_name = payload.get("first_name", ""),
            last_name  = payload.get("last_name", ""),
            patronymic = payload.get("patronymic", ""),
            phone      = payload.get("phone", ""),
            email      = payload.get("email", "")
        )
        await update.message.reply_text("‚úÖ –ü—Ä–æ—Ñ–∏–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω—ë–Ω!")
    else:
        logger.info("‚Ñπ –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö: %s", t)
        await update.message.reply_text(f"‚ÑπÔ∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø: {t}")

def register_webapp_handlers(app):
    app.add_handler(
        MessageHandler(filters.StatusUpdate.WEB_APP_DATA, webapp_data_handler),
        group=5
    )
